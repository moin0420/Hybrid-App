{"ast":null,"code":"import _objectSpread from\"C:/Users/GulamK/hybrid-app-new/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,forwardRef,useImperativeHandle,useRef}from\"react\";import axios from\"axios\";import io from\"socket.io-client\";import\"./Table.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io(window.location.origin);const Table=/*#__PURE__*/forwardRef((props,ref)=>{const[rows,setRows]=useState([]);const[editing,setEditing]=useState({});const[currentUser,setCurrentUser]=useState(\"\");const[editingStatus,setEditingStatus]=useState({});const[sortConfig,setSortConfig]=useState({});const[filters,setFilters]=useState({});const[currentPage,setCurrentPage]=useState(1);const rowsPerPage=20;const[colWidths,setColWidths]=useState({requirementid:150,title:250,client:120,slots:60,status:100,assigned_recruiters:140,working:100});const thRefs=useRef({});useEffect(()=>{let user=localStorage.getItem(\"recruiterName\");if(!user){user=prompt(\"Enter your name:\");if(user)localStorage.setItem(\"recruiterName\",user);}setCurrentUser(user||\"Anonymous\");},[]);const fetchRows=async()=>{try{const res=await axios.get(\"/api/requisitions\");setRows(res.data||[]);}catch(err){console.error(\"Error fetching requisitions:\",err);}};useImperativeHandle(ref,()=>({fetchRows}));useEffect(()=>{fetchRows();socket.on(\"editing_status\",data=>{setEditingStatus(prev=>{const updated=_objectSpread({},prev);const{requirementid,user,field}=data;if(!user||!field)delete updated[requirementid];else updated[requirementid]={user,field};return updated;});});socket.on(\"requisitions_updated\",()=>{fetchRows();});return()=>{socket.off(\"requisitions_updated\");socket.off(\"editing_status\");};},[]);const columns=[\"requirementid\",\"title\",\"client\",\"slots\",\"status\",\"assigned_recruiters\",\"working\"];const isNonWorkable=row=>row.status!==\"Open\"||row.slots===0;const handleEdit=(reqId,field,value)=>{socket.emit(\"editing_status\",{requirementid:reqId,user:currentUser,field});setEditing(prev=>_objectSpread(_objectSpread({},prev),{},{[reqId]:_objectSpread(_objectSpread({},prev[reqId]),{},{[field]:value})}));};const handleSave=async reqId=>{const updatedFields=editing[reqId];if(!updatedFields)return;// Prevent saving completely blank or undefined values\nconst cleanedFields=Object.fromEntries(Object.entries(updatedFields).filter(_ref=>{let[,val]=_ref;return val!==undefined&&val!==null&&val!==\"\";}));try{await axios.put(\"/api/requisitions/\".concat(reqId),cleanedFields);// ✅ Immediately update UI (no waiting for socket)\nsetRows(prevRows=>prevRows.map(r=>r.requirementid===reqId?_objectSpread(_objectSpread({},r),cleanedFields):r));// ✅ Ensure everyone else gets the update\nawait fetchRows();socket.emit(\"requisitions_updated\");socket.emit(\"editing_status\",{requirementid:reqId,user:null,field:null});setEditing(prev=>{const copy=_objectSpread({},prev);delete copy[reqId];return copy;});}catch(err){var _err$response,_err$response$data;alert(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Error saving changes\");socket.emit(\"editing_status\",{requirementid:reqId,user:null,field:null});await fetchRows();setEditing(prev=>{const copy=_objectSpread({},prev);delete copy[reqId];return copy;});}};const toggleWorking=async row=>{if(!row.requirementid)return;const assignedUsers=row.assigned_recruiters||[];const isAssigned=assignedUsers.includes(currentUser);const alreadyWorking=rows.find(r=>(r.assigned_recruiters||[]).includes(currentUser)&&r.requirementid!==row.requirementid);if(!isAssigned&&alreadyWorking){alert(\"You are already working on another requirement.\");return;}if(!isAssigned&&assignedUsers.length>=2){alert(\"Two recruiters are already working on this requirement.\");return;}const newAssigned=isAssigned?assignedUsers.filter(u=>u!==currentUser):[...assignedUsers,currentUser];const newWorkingTimes=_objectSpread({},row.working_times||{});if(isAssigned)delete newWorkingTimes[currentUser];else newWorkingTimes[currentUser]=new Date();try{await axios.put(\"/api/requisitions/\".concat(row.requirementid),{assigned_recruiters:newAssigned,working_times:newWorkingTimes});socket.emit(\"requisitions_updated\");fetchRows();}catch(err){var _err$response2,_err$response2$data;alert(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||\"Error updating working status\");}};const disableCheckbox=row=>{const assignedUsers=row.assigned_recruiters||[];const nonWorkable=isNonWorkable(row);const userWorkingElsewhere=rows.some(r=>(r.assigned_recruiters||[]).includes(currentUser)&&r.requirementid!==row.requirementid);return nonWorkable||!assignedUsers.includes(currentUser)&&(assignedUsers.length>=2||userWorkingElsewhere);};const handleSort=field=>{let direction=\"ascending\";if(sortConfig.field===field&&sortConfig.direction===\"ascending\"){direction=\"descending\";}setSortConfig({field,direction});};const handleFilter=(field,value)=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));setCurrentPage(1);};const filteredRows=rows.filter(row=>Object.keys(filters).every(field=>{var _filters$field,_row$field;const filterValue=(_filters$field=filters[field])===null||_filters$field===void 0?void 0:_filters$field.toLowerCase();if(!filterValue)return true;if(field===\"assigned_recruiters\"){return(row[field]||[]).some(u=>u.toLowerCase().includes(filterValue));}return String((_row$field=row[field])!==null&&_row$field!==void 0?_row$field:\"\").toLowerCase().includes(filterValue);}));const sortedRows=[...filteredRows].sort((a,b)=>{if(!sortConfig.field)return 0;const getVal=(obj,f)=>{var _obj$f;return Array.isArray(obj[f])?(obj[f]||[]).join(\", \"):(_obj$f=obj[f])!==null&&_obj$f!==void 0?_obj$f:\"\";};const valA=String(getVal(a,sortConfig.field)).toLowerCase();const valB=String(getVal(b,sortConfig.field)).toLowerCase();if(valA<valB)return sortConfig.direction===\"ascending\"?-1:1;if(valA>valB)return sortConfig.direction===\"ascending\"?1:-1;return 0;});const totalPages=Math.ceil(sortedRows.length/rowsPerPage);const paginatedRows=sortedRows.slice((currentPage-1)*rowsPerPage,currentPage*rowsPerPage);const startResize=(e,col)=>{var _thRefs$current$col;e.preventDefault();const startX=e.clientX;const startWidth=((_thRefs$current$col=thRefs.current[col])===null||_thRefs$current$col===void 0?void 0:_thRefs$current$col.offsetWidth)||100;document.body.classList.add(\"resizing\");const doDrag=event=>{const newWidth=Math.max(60,startWidth+event.clientX-startX);setColWidths(prev=>_objectSpread(_objectSpread({},prev),{},{[col]:newWidth}));};const stopDrag=()=>{document.removeEventListener(\"mousemove\",doDrag);document.removeEventListener(\"mouseup\",stopDrag);document.body.classList.remove(\"resizing\");};document.addEventListener(\"mousemove\",doDrag);document.addEventListener(\"mouseup\",stopDrag);};const formatTime=timeString=>{if(!timeString)return\"\";const date=new Date(timeString);if(isNaN(date))return\"\";return date.toLocaleTimeString([],{hour:\"2-digit\",minute:\"2-digit\",hour12:true});};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-4\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-lg\",children:\"Requirements List\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-wrapper\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-400 text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 sticky-header\",children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>{var _filters$col;return/*#__PURE__*/_jsxs(\"th\",{ref:el=>thRefs.current[col]=el,className:\"border p-1 align-top\",style:{width:colWidths[col]?\"\".concat(colWidths[col],\"px\"):\"auto\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"th-content cursor-pointer\",onClick:()=>handleSort(col),children:[/*#__PURE__*/_jsxs(\"span\",{children:[col===\"requirementid\"&&\"Req ID\",col===\"title\"&&\"Job Title\",col===\"client\"&&\"Client\",col===\"slots\"&&\"Slots\",col===\"status\"&&\"Status\",col===\"assigned_recruiters\"&&\"Assigned Recruiter(s)\",col===\"working\"&&\"Working?\"]}),sortConfig.field===col&&/*#__PURE__*/_jsx(\"span\",{children:sortConfig.direction===\"ascending\"?\"▲\":\"▼\"})]}),col!==\"working\"&&/*#__PURE__*/_jsx(\"input\",{placeholder:\"Filter...\",className:\"filter-input mt-1 w-full border rounded px-1 py-0.5 text-xs\",value:(_filters$col=filters[col])!==null&&_filters$col!==void 0?_filters$col:\"\",onChange:e=>handleFilter(col,e.target.value)}),/*#__PURE__*/_jsx(\"div\",{className:\"resize-handle\",onMouseDown:e=>startResize(e,col)})]},col);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:paginatedRows.map(row=>{const recruiters=row.assigned_recruiters||[];const someoneWorking=recruiters.length>0;return/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>{var _ref3,_editing$row$requirem3,_editing$row$requirem4;if(col===\"working\"){const assignedUsers=recruiters;return/*#__PURE__*/_jsx(\"td\",{className:\"border p-1 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:assignedUsers.includes(currentUser),onChange:()=>toggleWorking(row),disabled:disableCheckbox(row)})},col);}if(col===\"assigned_recruiters\"){const workingTimes=row.working_times||{};const nonWorkable=isNonWorkable(row);return/*#__PURE__*/_jsx(\"td\",{className:\"border p-1 text-center\",children:nonWorkable?\"Non-Workable\":recruiters.length?recruiters.map(user=>/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center text-xs\",children:/*#__PURE__*/_jsxs(\"span\",{className:user===currentUser?\"font-semibold text-green-700\":\"\",children:[user,\" \",workingTimes[user]&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500 text-[10px]\",children:[\"(\",formatTime(workingTimes[user]),\")\"]})]})},user)):\"-\"},col);}if(col===\"status\"){var _ref2,_editing$row$requirem,_editing$row$requirem2;const val=(_ref2=(_editing$row$requirem=(_editing$row$requirem2=editing[row.requirementid])===null||_editing$row$requirem2===void 0?void 0:_editing$row$requirem2[col])!==null&&_editing$row$requirem!==void 0?_editing$row$requirem:row[col])!==null&&_ref2!==void 0?_ref2:\"\";const editingUser=editingStatus[row.requirementid];const isEditingOther=editingUser&&editingUser.user!==currentUser&&editingUser.field===col;return/*#__PURE__*/_jsx(\"td\",{className:\"border p-1 text-center status-\".concat(val.toLowerCase().replace(/\\s/g,\"\")),children:isEditingOther?/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-orange-500 italic\",children:[editingUser.user,\" editing...\"]}):/*#__PURE__*/_jsx(\"select\",{className:\"table-input\",value:val,onChange:e=>handleEdit(row.requirementid,col,e.target.value),onBlur:()=>handleSave(row.requirementid),disabled:someoneWorking,children:[\"Open\",\"Closed\",\"On Hold\",\"Filled\",\"Cancelled\"].map(opt=>/*#__PURE__*/_jsx(\"option\",{value:opt,children:opt},opt))})},col);}const val=(_ref3=(_editing$row$requirem3=(_editing$row$requirem4=editing[row.requirementid])===null||_editing$row$requirem4===void 0?void 0:_editing$row$requirem4[col])!==null&&_editing$row$requirem3!==void 0?_editing$row$requirem3:row[col])!==null&&_ref3!==void 0?_ref3:\"\";const editingUser=editingStatus[row.requirementid];const isEditingOther=editingUser&&editingUser.user!==currentUser&&editingUser.field===col;return/*#__PURE__*/_jsx(\"td\",{className:\"border p-1 text-center\",children:isEditingOther?/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-orange-500 italic\",children:[editingUser.user,\" editing...\"]}):/*#__PURE__*/_jsx(\"input\",{className:\"table-input\",value:val,onChange:e=>handleEdit(row.requirementid,col,e.target.value),onBlur:()=>handleSave(row.requirementid),disabled:col===\"slots\"&&someoneWorking})},col);})},row.requirementid);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mt-3 text-sm\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.max(p-1,1)),disabled:currentPage===1,className:\"px-3 py-1 border rounded disabled:opacity-50\",children:\"\\u2190 Prev\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages||1]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.min(p+1,totalPages)),disabled:currentPage===totalPages||totalPages===0,className:\"px-3 py-1 border rounded disabled:opacity-50\",children:\"Next \\u2192\"})]})]})]});});export default Table;","map":{"version":3,"names":["React","useState","useEffect","forwardRef","useImperativeHandle","useRef","axios","io","jsx","_jsx","jsxs","_jsxs","socket","window","location","origin","Table","props","ref","rows","setRows","editing","setEditing","currentUser","setCurrentUser","editingStatus","setEditingStatus","sortConfig","setSortConfig","filters","setFilters","currentPage","setCurrentPage","rowsPerPage","colWidths","setColWidths","requirementid","title","client","slots","status","assigned_recruiters","working","thRefs","user","localStorage","getItem","prompt","setItem","fetchRows","res","get","data","err","console","error","on","prev","updated","_objectSpread","field","off","columns","isNonWorkable","row","handleEdit","reqId","value","emit","handleSave","updatedFields","cleanedFields","Object","fromEntries","entries","filter","_ref","val","undefined","put","concat","prevRows","map","r","copy","_err$response","_err$response$data","alert","response","message","toggleWorking","assignedUsers","isAssigned","includes","alreadyWorking","find","length","newAssigned","u","newWorkingTimes","working_times","Date","_err$response2","_err$response2$data","disableCheckbox","nonWorkable","userWorkingElsewhere","some","handleSort","direction","handleFilter","filteredRows","keys","every","_filters$field","_row$field","filterValue","toLowerCase","String","sortedRows","sort","a","b","getVal","obj","f","_obj$f","Array","isArray","join","valA","valB","totalPages","Math","ceil","paginatedRows","slice","startResize","e","col","_thRefs$current$col","preventDefault","startX","clientX","startWidth","current","offsetWidth","document","body","classList","add","doDrag","event","newWidth","max","stopDrag","removeEventListener","remove","addEventListener","formatTime","timeString","date","isNaN","toLocaleTimeString","hour","minute","hour12","className","children","_filters$col","el","style","width","onClick","placeholder","onChange","target","onMouseDown","recruiters","someoneWorking","_ref3","_editing$row$requirem3","_editing$row$requirem4","type","checked","disabled","workingTimes","_ref2","_editing$row$requirem","_editing$row$requirem2","editingUser","isEditingOther","replace","onBlur","opt","p","min"],"sources":["C:/Users/GulamK/hybrid-app-new/frontend/src/components/Table.jsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Table.css\";\r\n\r\nconst socket = io(window.location.origin);\r\n\r\nconst Table = forwardRef((props, ref) => {\r\n  const [rows, setRows] = useState([]);\r\n  const [editing, setEditing] = useState({});\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n  const [editingStatus, setEditingStatus] = useState({});\r\n  const [sortConfig, setSortConfig] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 20;\r\n  const [colWidths, setColWidths] = useState({\r\n    requirementid: 150,\r\n    title: 250,\r\n    client: 120,\r\n    slots: 60,\r\n    status: 100,\r\n    assigned_recruiters: 140,\r\n    working: 100,\r\n  });\r\n  const thRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    let user = localStorage.getItem(\"recruiterName\");\r\n    if (!user) {\r\n      user = prompt(\"Enter your name:\");\r\n      if (user) localStorage.setItem(\"recruiterName\", user);\r\n    }\r\n    setCurrentUser(user || \"Anonymous\");\r\n  }, []);\r\n\r\n  const fetchRows = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/requisitions\");\r\n      setRows(res.data || []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching requisitions:\", err);\r\n    }\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({ fetchRows }));\r\n\r\n  useEffect(() => {\r\n    fetchRows();\r\n\r\n    socket.on(\"editing_status\", (data) => {\r\n      setEditingStatus((prev) => {\r\n        const updated = { ...prev };\r\n        const { requirementid, user, field } = data;\r\n        if (!user || !field) delete updated[requirementid];\r\n        else updated[requirementid] = { user, field };\r\n        return updated;\r\n      });\r\n    });\r\n\r\n    socket.on(\"requisitions_updated\", () => {\r\n      fetchRows();\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"requisitions_updated\");\r\n      socket.off(\"editing_status\");\r\n    };\r\n  }, []);\r\n\r\n  const columns = [\r\n    \"requirementid\",\r\n    \"title\",\r\n    \"client\",\r\n    \"slots\",\r\n    \"status\",\r\n    \"assigned_recruiters\",\r\n    \"working\",\r\n  ];\r\n\r\n  const isNonWorkable = (row) => row.status !== \"Open\" || row.slots === 0;\r\n\r\n  const handleEdit = (reqId, field, value) => {\r\n    socket.emit(\"editing_status\", {\r\n      requirementid: reqId,\r\n      user: currentUser,\r\n      field,\r\n    });\r\n\r\n    setEditing((prev) => ({\r\n      ...prev,\r\n      [reqId]: { ...prev[reqId], [field]: value },\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (reqId) => {\r\n    const updatedFields = editing[reqId];\r\n    if (!updatedFields) return;\r\n\r\n    // Prevent saving completely blank or undefined values\r\n    const cleanedFields = Object.fromEntries(\r\n      Object.entries(updatedFields).filter(\r\n        ([, val]) => val !== undefined && val !== null && val !== \"\"\r\n      )\r\n    );\r\n\r\n    try {\r\n      await axios.put(`/api/requisitions/${reqId}`, cleanedFields);\r\n\r\n      // ✅ Immediately update UI (no waiting for socket)\r\n      setRows((prevRows) =>\r\n        prevRows.map((r) =>\r\n          r.requirementid === reqId ? { ...r, ...cleanedFields } : r\r\n        )\r\n      );\r\n\r\n      // ✅ Ensure everyone else gets the update\r\n      await fetchRows();\r\n      socket.emit(\"requisitions_updated\");\r\n      socket.emit(\"editing_status\", {\r\n        requirementid: reqId,\r\n        user: null,\r\n        field: null,\r\n      });\r\n\r\n      setEditing((prev) => {\r\n        const copy = { ...prev };\r\n        delete copy[reqId];\r\n        return copy;\r\n      });\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error saving changes\");\r\n      socket.emit(\"editing_status\", {\r\n        requirementid: reqId,\r\n        user: null,\r\n        field: null,\r\n      });\r\n      await fetchRows();\r\n      setEditing((prev) => {\r\n        const copy = { ...prev };\r\n        delete copy[reqId];\r\n        return copy;\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleWorking = async (row) => {\r\n    if (!row.requirementid) return;\r\n    const assignedUsers = row.assigned_recruiters || [];\r\n    const isAssigned = assignedUsers.includes(currentUser);\r\n    const alreadyWorking = rows.find(\r\n      (r) =>\r\n        (r.assigned_recruiters || []).includes(currentUser) &&\r\n        r.requirementid !== row.requirementid\r\n    );\r\n    if (!isAssigned && alreadyWorking) {\r\n      alert(\"You are already working on another requirement.\");\r\n      return;\r\n    }\r\n    if (!isAssigned && assignedUsers.length >= 2) {\r\n      alert(\"Two recruiters are already working on this requirement.\");\r\n      return;\r\n    }\r\n\r\n    const newAssigned = isAssigned\r\n      ? assignedUsers.filter((u) => u !== currentUser)\r\n      : [...assignedUsers, currentUser];\r\n    const newWorkingTimes = { ...(row.working_times || {}) };\r\n    if (isAssigned) delete newWorkingTimes[currentUser];\r\n    else newWorkingTimes[currentUser] = new Date();\r\n\r\n    try {\r\n      await axios.put(`/api/requisitions/${row.requirementid}`, {\r\n        assigned_recruiters: newAssigned,\r\n        working_times: newWorkingTimes,\r\n      });\r\n      socket.emit(\"requisitions_updated\");\r\n      fetchRows();\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error updating working status\");\r\n    }\r\n  };\r\n\r\n  const disableCheckbox = (row) => {\r\n    const assignedUsers = row.assigned_recruiters || [];\r\n    const nonWorkable = isNonWorkable(row);\r\n    const userWorkingElsewhere = rows.some(\r\n      (r) =>\r\n        (r.assigned_recruiters || []).includes(currentUser) &&\r\n        r.requirementid !== row.requirementid\r\n    );\r\n    return (\r\n      nonWorkable ||\r\n      (!assignedUsers.includes(currentUser) &&\r\n        (assignedUsers.length >= 2 || userWorkingElsewhere))\r\n    );\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.field === field && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ field, direction });\r\n  };\r\n\r\n  const handleFilter = (field, value) => {\r\n    setFilters((prev) => ({ ...prev, [field]: value }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const filteredRows = rows.filter((row) =>\r\n    Object.keys(filters).every((field) => {\r\n      const filterValue = filters[field]?.toLowerCase();\r\n      if (!filterValue) return true;\r\n      if (field === \"assigned_recruiters\") {\r\n        return (row[field] || []).some((u) =>\r\n          u.toLowerCase().includes(filterValue)\r\n        );\r\n      }\r\n      return String(row[field] ?? \"\").toLowerCase().includes(filterValue);\r\n    })\r\n  );\r\n\r\n  const sortedRows = [...filteredRows].sort((a, b) => {\r\n    if (!sortConfig.field) return 0;\r\n    const getVal = (obj, f) =>\r\n      Array.isArray(obj[f]) ? (obj[f] || []).join(\", \") : obj[f] ?? \"\";\r\n    const valA = String(getVal(a, sortConfig.field)).toLowerCase();\r\n    const valB = String(getVal(b, sortConfig.field)).toLowerCase();\r\n    if (valA < valB) return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n    if (valA > valB) return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  const totalPages = Math.ceil(sortedRows.length / rowsPerPage);\r\n  const paginatedRows = sortedRows.slice(\r\n    (currentPage - 1) * rowsPerPage,\r\n    currentPage * rowsPerPage\r\n  );\r\n\r\n  const startResize = (e, col) => {\r\n    e.preventDefault();\r\n    const startX = e.clientX;\r\n    const startWidth = thRefs.current[col]?.offsetWidth || 100;\r\n    document.body.classList.add(\"resizing\");\r\n    const doDrag = (event) => {\r\n      const newWidth = Math.max(60, startWidth + event.clientX - startX);\r\n      setColWidths((prev) => ({ ...prev, [col]: newWidth }));\r\n    };\r\n    const stopDrag = () => {\r\n      document.removeEventListener(\"mousemove\", doDrag);\r\n      document.removeEventListener(\"mouseup\", stopDrag);\r\n      document.body.classList.remove(\"resizing\");\r\n    };\r\n    document.addEventListener(\"mousemove\", doDrag);\r\n    document.addEventListener(\"mouseup\", stopDrag);\r\n  };\r\n\r\n  const formatTime = (timeString) => {\r\n    if (!timeString) return \"\";\r\n    const date = new Date(timeString);\r\n    if (isNaN(date)) return \"\";\r\n    return date.toLocaleTimeString([], {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"flex justify-center mb-4\">\r\n        <h2 className=\"font-bold text-lg\">Requirements List</h2>\r\n      </div>\r\n\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"w-full border-collapse border border-gray-400 text-sm\">\r\n          <thead className=\"bg-gray-100 sticky-header\">\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th\r\n                  key={col}\r\n                  ref={(el) => (thRefs.current[col] = el)}\r\n                  className=\"border p-1 align-top\"\r\n                  style={{\r\n                    width: colWidths[col] ? `${colWidths[col]}px` : \"auto\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"th-content cursor-pointer\"\r\n                    onClick={() => handleSort(col)}\r\n                  >\r\n                    <span>\r\n                      {col === \"requirementid\" && \"Req ID\"}\r\n                      {col === \"title\" && \"Job Title\"}\r\n                      {col === \"client\" && \"Client\"}\r\n                      {col === \"slots\" && \"Slots\"}\r\n                      {col === \"status\" && \"Status\"}\r\n                      {col === \"assigned_recruiters\" &&\r\n                        \"Assigned Recruiter(s)\"}\r\n                      {col === \"working\" && \"Working?\"}\r\n                    </span>\r\n                    {sortConfig.field === col && (\r\n                      <span>\r\n                        {sortConfig.direction === \"ascending\" ? \"▲\" : \"▼\"}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {col !== \"working\" && (\r\n                    <input\r\n                      placeholder=\"Filter...\"\r\n                      className=\"filter-input mt-1 w-full border rounded px-1 py-0.5 text-xs\"\r\n                      value={filters[col] ?? \"\"}\r\n                      onChange={(e) => handleFilter(col, e.target.value)}\r\n                    />\r\n                  )}\r\n                  <div\r\n                    className=\"resize-handle\"\r\n                    onMouseDown={(e) => startResize(e, col)}\r\n                  />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {paginatedRows.map((row) => {\r\n              const recruiters = row.assigned_recruiters || [];\r\n              const someoneWorking = recruiters.length > 0;\r\n\r\n              return (\r\n                <tr key={row.requirementid}>\r\n                  {columns.map((col) => {\r\n                    if (col === \"working\") {\r\n                      const assignedUsers = recruiters;\r\n                      return (\r\n                        <td key={col} className=\"border p-1 text-center\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={assignedUsers.includes(currentUser)}\r\n                            onChange={() => toggleWorking(row)}\r\n                            disabled={disableCheckbox(row)}\r\n                          />\r\n                        </td>\r\n                      );\r\n                    }\r\n\r\n                    if (col === \"assigned_recruiters\") {\r\n                      const workingTimes = row.working_times || {};\r\n                      const nonWorkable = isNonWorkable(row);\r\n                      return (\r\n                        <td key={col} className=\"border p-1 text-center\">\r\n                          {nonWorkable\r\n                            ? \"Non-Workable\"\r\n                            : recruiters.length\r\n                            ? recruiters.map((user) => (\r\n                                <div\r\n                                  key={user}\r\n                                  className=\"flex flex-col items-center text-xs\"\r\n                                >\r\n                                  <span\r\n                                    className={\r\n                                      user === currentUser\r\n                                        ? \"font-semibold text-green-700\"\r\n                                        : \"\"\r\n                                    }\r\n                                  >\r\n                                    {user}{\" \"}\r\n                                    {workingTimes[user] && (\r\n                                      <span className=\"text-gray-500 text-[10px]\">\r\n                                        ({formatTime(workingTimes[user])})\r\n                                      </span>\r\n                                    )}\r\n                                  </span>\r\n                                </div>\r\n                              ))\r\n                            : \"-\"}\r\n                        </td>\r\n                      );\r\n                    }\r\n\r\n                    if (col === \"status\") {\r\n                      const val =\r\n                        editing[row.requirementid]?.[col] ?? row[col] ?? \"\";\r\n                      const editingUser = editingStatus[row.requirementid];\r\n                      const isEditingOther =\r\n                        editingUser &&\r\n                        editingUser.user !== currentUser &&\r\n                        editingUser.field === col;\r\n                      return (\r\n                        <td\r\n                          key={col}\r\n                          className={`border p-1 text-center status-${val\r\n                            .toLowerCase()\r\n                            .replace(/\\s/g, \"\")}`}\r\n                        >\r\n                          {isEditingOther ? (\r\n                            <div className=\"text-xs text-orange-500 italic\">\r\n                              {editingUser.user} editing...\r\n                            </div>\r\n                          ) : (\r\n                            <select\r\n                              className=\"table-input\"\r\n                              value={val}\r\n                              onChange={(e) =>\r\n                                handleEdit(\r\n                                  row.requirementid,\r\n                                  col,\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                              onBlur={() => handleSave(row.requirementid)}\r\n                              disabled={someoneWorking}\r\n                            >\r\n                              {[\r\n                                \"Open\",\r\n                                \"Closed\",\r\n                                \"On Hold\",\r\n                                \"Filled\",\r\n                                \"Cancelled\",\r\n                              ].map((opt) => (\r\n                                <option key={opt} value={opt}>\r\n                                  {opt}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n\r\n                    const val =\r\n                      editing[row.requirementid]?.[col] ?? row[col] ?? \"\";\r\n                    const editingUser = editingStatus[row.requirementid];\r\n                    const isEditingOther =\r\n                      editingUser &&\r\n                      editingUser.user !== currentUser &&\r\n                      editingUser.field === col;\r\n\r\n                    return (\r\n                      <td key={col} className=\"border p-1 text-center\">\r\n                        {isEditingOther ? (\r\n                          <div className=\"text-xs text-orange-500 italic\">\r\n                            {editingUser.user} editing...\r\n                          </div>\r\n                        ) : (\r\n                          <input\r\n                            className=\"table-input\"\r\n                            value={val}\r\n                            onChange={(e) =>\r\n                              handleEdit(\r\n                                row.requirementid,\r\n                                col,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                            onBlur={() => handleSave(row.requirementid)}\r\n                            disabled={col === \"slots\" && someoneWorking}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"flex justify-between items-center mt-3 text-sm\">\r\n          <button\r\n            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n            disabled={currentPage === 1}\r\n            className=\"px-3 py-1 border rounded disabled:opacity-50\"\r\n          >\r\n            ← Prev\r\n          </button>\r\n          <span>\r\n            Page {currentPage} of {totalPages || 1}\r\n          </span>\r\n          <button\r\n            onClick={() =>\r\n              setCurrentPage((p) => Math.min(p + 1, totalPages))\r\n            }\r\n            disabled={currentPage === totalPages || totalPages === 0}\r\n            className=\"px-3 py-1 border rounded disabled:opacity-50\"\r\n          >\r\n            Next →\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}